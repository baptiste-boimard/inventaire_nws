import { Request, Response, NextFunction } from 'express';
import inventoryController from '../src/controllers/inventoryController';

// import request from 'supertest';
import axios from 'axios';
// import { server } from './appTest';
// import { appTest } from './appTest';

const url = 'http://localhost:3040';
const falseUrl = 'http://localhost:3040/ouinouin';
const urlTest = 'http://localhost:3050';

const mockInventory = {
    name: 'Cables HDMI',
    quantity: 2,
    details: 'Cable de 3m',
};

const badMockInventory = {
    name: null,
    quantity: 1,
    details: 'Cable de 3m',
}

// afterAll(() => {
//     server.close();
// })

// afterAll(async () => {
//     await new Promise((resolve) => setTimeout(() => resolve(), 500));
// })

// describe('Test d\'une route qui n\'existe pas', () => {
//     test('Réponse 404 sur une mauvaise URL', async () => {
        
//         try {
//             await axios.get(falseUrl);
//             } catch (error) {
//                 expect(error).toBeTruthy();
//                 expect(error.response.status).toBe(404);
//                 expect(error.message).toEqual('Request failed with status code 404');
            
//         }
        
        
//     })
// });
const request = require('supertest');
const client = require('../src/models/dbClient')

let server
// beforeEach((done) => {
//     // server = require('./appTest');
// });
afterEach(async () => {
    await server.close();
});

describe('Tests deconsole.log(error);s routes inventoryController', () => {

    test('muavais mock', (done) => {
        request(server)
            .post('/inventory', badMockInventory)
            .expect(200, done);
        // client.end();
    })
    // test('Test réponse à un post d\'un mockInventory', async () => {
    //     const res = await axios.post(`${url}/inventory`, mockInventory);
    //         expect(res).toBeTruthy();
    //         expect(res.status).toBe(200);
    // }),
    // test('Test réponse à un post d\'un badMockInventory', async () => {
    //     // const server = appTest.listen(3050);
    //     try {
    //         const res = await axios.post(`${urlTest}/inventory`, badMockInventory);
    //         console.log(res);
    //         expect(res).toBeTruthy();
    //         expect(res.status).toBe(200);        
    //     } catch (error) {
    //         // expect(error).toBeTruthy()
    //         console.log(error);
            
    //         server.close();
    //     }
        

    // })
});






    // test('Response to get / with value to mockInventory', async() => {
    //     // const res = await axios.get(url);service.inventory = {};

    //         inventoryController.services.inventory = mockInventory;

    //         const res = await axios.get(url);
            

    //             console.log(res);
                
    //             expect(res).toBeTruthy();
    //             expect(res.status).toBe(200);
    //             expect(res.data.cable).toBe(42);
    //             expect(res.data.mug).toBe(2);
    //             expect(res.data.laptop).toBe(0);
    //         }),

    // test('Test avec super test pour status 200 et mock' ,async() => {
    //     const userId = '123';
    //     const response = await request(app).get(`/user/123`);
        
    //     expect(response.status).toBe(200);
    //     expect(response.body).toEqual({
    //         id: userId,
    //         name: 'John Doel',
    //     });
    // }),

    // test('BadResponse to bad url', async () => {
    //     try {
            
    //         const res = await axios.get(falseUrl);
    //         // const res = await app.get(falseUrl, (res: Response) => {
    //             expect(res).toBeTruthy();
    //             expect(res.status).toBe(404);
    //     // })
    //     } catch (error: any) {
    //         expect(error.message).toEqual('Request failed with status code 404');
    //     }
    

    // })
// });

// app.close();
