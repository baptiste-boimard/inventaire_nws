name: inventaire_nws

on: [push]

jobs:
  database-and-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env: 
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - name: Npm install
        working-directory: ./server
        run: npm ci

      - name: Connect to Postgresql and create tables
        working-directory: ./server
        run: node ./github/client.js
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          
      - name: Lancement des Tests
        working-directory: ./server
        run: npm test
        env: 
          URL_DATABASE: 'postgres://postgres:postgres@localhost:5432/postgres?sslmode=disable'

  build-and-push-image-back:
    runs-on: ubuntu-latest
    if: github.ref_name == 'main'
    needs: [database-and-test]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: ./server
          push: true
          tags: ghcr.io/inventory_nws_back:${{ github.ref_name }}

  
  deploy:
    runs-on: ubuntu-latest
    needs: [build-and-push-image-back]
    steps:
        - uses: webfactory/ssh-agent@v0.8.0
          with:
            ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
        - run: |
            ssh -o StrictHostKeyChecking=no ${{secrets.SSH_USER}}@${{secrets.SSH_HOST}} "\
            ls -la && \
            cd inventaire_nws && \
            git pull && \
            sudo docker compose -f docker-compose.yml up -d --pull=always"
            # le -d permet de se detacher du process et donc d'eviter qu'il start sur le ubuntu virtuel
            #    pm2 start .. ou pm2 restart all && \
            # fddd



